/*
 * Note: only add styles here in cases where you can't achieve the style with
 * templates or theme.json settings.
 */

@import "jetpack";
@import "page-screenshot-audits";

/* Add a visible focus style that matches the theme. */
a:where(:not(.wp-element-button)):focus-visible {
	outline: 1.5px solid currentColor;
	outline-offset: 0.5px;
	border-radius: 2px;
}

/* Site Hero section */
.is-section-site-hero {
	// This value has been calculated to center the dots as the background scales up/down.
	// It does not need a minimum, because the media query kicks in.
	--wporg-site-hero--offset: clamp(0px, calc(7.6vw + -38px), 108px);

	.wp-block-column + .wp-block-column {
		align-self: stretch;
		display: flex;
	}

	.wp-block-cover {
		align-self: flex-end;
		min-height: 0 !important;
		padding: 0 !important;
		width: 100% !important;
	}

	.wp-block-cover__inner-container {
		width: auto;
	}

	// Handle the middle size between single-column view & correctly scaled desktop.
	// 1280px is where the screenshot column shrinks smaller than the meta column.
	// 1180px is the single column breakpoint.
	@media (max-width: 1280px) and (min-width: 1180px) {
		// Scale the spacing so that the site meta is always shorter than the framed
		// screenshot. This ensures the header stays aligned with the frame dots.
		.wp-block-wporg-site-meta-list {
			margin-block: clamp(30px, calc(20vw + -206px), 50px) !important;

			&.has-hidden-label li {
				padding-block: clamp(14px, calc(6vw + -56.8px), 20px);
			}
		}
	}

	@media (min-width: 1180px) {
		.wp-block-cover {
			aspect-ratio: 1010/530 !important;
			overflow: hidden;
		}

		.wp-block-cover__image-background {
			height: auto !important;
		}

		.wp-block-cover__inner-container {
			position: absolute !important;
			top: var(--wporg-site-hero--offset);
			right: var(--wporg-site-hero--offset);
			left: var(--wporg-site-hero--offset);
		}
	}

	/* Switch down to one column when image gets squished. */
	@media (max-width: 1179px) {
		--wporg-site-hero--offset: #{88px * 0.6};

		.wp-block-columns {
			flex-direction: column;
			gap: 0;
		}

		.wp-block-wporg-site-meta-list {
			margin-bottom: 0 !important;
		}

		.wp-block-cover {
			padding-left: 0 !important;
			padding-right: 0 !important;
			min-height: 0 !important;
		}

		.wp-block-cover__image-background {
			display: none;
		}

		.wp-block-cover__inner-container {
			// Range from 20-30px, uses same scale as the site meta.
			padding-top: clamp(20px, 1.7vw + 10px, 30px);
			background: none;
			width: 100%;
		}
	}

	/* Hide the visible site title on small screens. */
	@media (max-width: 599px) {
		h1:not(.screen-reader-text),
		h1 + p {
			display: none;
		}
	}

	/* Hide the screen-reader site title on large screens. */
	@media (min-width: 600px) {
		h1.screen-reader-text {
			display: none;
		}
	}
}

/* Both blocks are in the local header, but only one should be shown at any given time. */
body.blog .wp-block-wporg-local-navigation-bar .wp-block-post-title,
body.archive .wp-block-wporg-local-navigation-bar .wp-block-post-title,
body.search .wp-block-wporg-local-navigation-bar .wp-block-post-title {
	display: none;
}

body.single .wp-block-wporg-local-navigation-bar .wp-block-query-title,
body.page .wp-block-wporg-local-navigation-bar .wp-block-query-title {
	display: none;
}

/* Style the site grid. */
.wp-block-query .is-layout-grid {
	.wp-block-post-title {
		flex-shrink: 0;
		max-width: 100%;
	}

	.wp-block-post-terms {
		padding-inline-start: 2px;
		overflow: hidden;
		white-space: nowrap;
		text-overflow: ellipsis;

		.wp-block-post-terms__separator {
			white-space: inherit;
		}

		a,
		.wp-block-post-terms__separator {
			display: none;
		}

		a:nth-of-type(1),
		.wp-block-post-terms__separator:nth-of-type(1),
		a:nth-of-type(2) {
			display: revert;
		}

		@media (min-width: 480px) {
			.wp-block-post-terms__separator:nth-of-type(2),
			a:nth-of-type(3) {
				display: revert;
			}
		}
	}
}

@media (max-width: 1600px) {
	.wp-block-post-template.is-layout-grid.columns-3:not(.wporg-related-posts) {
		grid-template-columns: repeat(2, minmax(0, 1fr));
	}
}

@media (max-width: 800px) {
	.wp-block-post-template.is-layout-grid.columns-3 {
		grid-template-columns: repeat(1, minmax(0, 1fr)) !important;
	}
}

.wp-block-query-pagination.wp-block-query-pagination {
	margin-block: 0 !important;
}

.wp-block-search {
	max-width: 100%;
}

/* Shrink the arrow to prevent early text wrapping. */
.is-style-with-arrow a[href]:first-of-type::after {
	min-width: 1.5em !important;
}

/* Adjust the translation when `edge-space` switches down to 20px. */
@media (max-width: 889px) {
	.is-style-with-arrow a[href]:first-of-type:hover::before,
	.is-style-with-arrow a[href]:first-of-type:focus::before,
	.is-style-with-arrow a[href]:first-of-type:focus-within::before {
		transform: translateX(10px) rotate(45deg) !important;
	}

	.is-style-with-arrow a[href]:first-of-type:hover::after,
	.is-style-with-arrow a[href]:first-of-type:focus::after,
	.is-style-with-arrow a[href]:first-of-type:focus-within::after {
		transform: translateX(10px) !important;
	}
}

/* Scroll the filter bar smaller screens. */
@media (max-width: 889px) {
	.wporg-query-filters {
		overflow-x: scroll;
		max-width: 100%;
	}
}

/* Page footer */
@media (max-width: 781px) {
	.wp-block-columns.is-page-footer > .wp-block-column:first-child {
		border-right: none;
		border-bottom: 1px solid var(--wp--preset--color--white-opacity-15);
	}
}

/* Update the background & text color on /thanks page. */
body.page-template-page-submit-confirmation .wp-site-blocks {
	background: var(--wp--preset--color--charcoal-1);
	color: var(--wp--preset--color--white);
}

/* Add background to spacers. These are custom classes, not attached as block styles. */
.wp-block-spacer {
	&.has-dots-background,
	&.has-dark-dots-background,
	&.has-blue-dots-background {
		background-position: top center;
		background-repeat: repeat-x;
		background-size: auto;
	}

	&.has-dots-background {
		background-image: url(../../images/dots-banner.svg);
	}

	&.has-blue-dots-background {
		background-image: url(../../images/dots-blue-banner.svg);
	}

	&.has-dark-dots-background {
		background-image: url(../../images/dots-dark-banner.svg);
	}
}

/* Add "no underline" helper class. This is a custom class, not attached as block styles. */
.has-link-no-underline a:where(:not(.wp-element-button)) {
	text-decoration: none;

	&:hover {
		text-decoration: underline;
	}
}
